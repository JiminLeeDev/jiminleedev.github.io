{"version":3,"sources":["pages/main.js","components/info_card.js","index.js"],"names":["MainPage","Component","props","state","is_loaded","is_hovering","profile_icon","summoner_level","search_name","username","most_champion","cs_per_min_average","undefined","kda_average","win_rate","participants_data","tier","emblem","game_datas","reinit_state","setState","style","display","this","zIndex","width","height","position","top","left","backgroundColor","justifyContent","alignItems","color","flexDirection","src","alt","onSubmit","event","preventDefault","match_cnt","user_data","match_ids","league_data","trim","fetch","then","data","status","json","puuid","Promise","all","map","match_id","datas","converted_data","push","id","kda_sum","cs_per_min_sum","played_champions","win_sum","most_champion_cnt","game_data","info","participants","participant","summonerId","kills","assists","deaths","totalMinionsKilled","timePlayed","win","championName","toLowerCase","slice","rank","leaguePoints","Object","keys","champion_name","profileIconId","Math","floor","length","summonerLevel","console","log","fontFamily","borderRadius","padding","margin","type","value","onChange","target","placeholder","border","fontSize","outline","maxWidth","textAlign","caretColor","onMouseEnter","onMouseLeave","cursor","marginRight","transform","transitionDuration","gridTemplateColumns","marginBottom","minHeight","columnGap","borderColor","idx","ReactDOM","createRoot","document","getElementById","render","StrictMode","background","overflow","href","textDecoration"],"mappings":"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","file":"static/js/main.cfc3dff6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { font_css } from \"../default.css\";\r\nimport InfoCard from \"./../components/info_card\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      is_loaded: true,\r\n      is_hovering: false,\r\n      profile_icon: 29,\r\n      summoner_level: \"\",\r\n      search_name: \"\",\r\n      username: \"\",\r\n      most_champion: \"\",\r\n      cs_per_min_average: undefined,\r\n      kda_average: undefined,\r\n      win_rate: undefined,\r\n      participants_data: [],\r\n      tier: \"\",\r\n      emblem: \"icons/Emblem_Challenger.png\",\r\n      game_datas: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const reinit_state = () => {\r\n      this.setState({\r\n        is_hovering: false,\r\n        profile_icon: 50,\r\n        summoner_level: \"\",\r\n        search_name: \"\",\r\n        most_champion: \"\",\r\n        cs_per_min_average: undefined,\r\n        kda_average: undefined,\r\n        win_rate: undefined,\r\n        participants_data: [],\r\n        tier: \"\",\r\n        emblem: \"icons/Emblem_Challenger.png\",\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: this.state.is_loaded ? \"none\" : \"flex\",\r\n            zIndex: \"1\",\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            top: \"0px\",\r\n            left: \"0px\",\r\n            backgroundColor: \"rgba(0,0,0,0.45)\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            color: \"rgba(255, 255, 255, 1)\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <img\r\n            src=\"icons/loading.svg\"\r\n            alt=\"doesn't exist\"\r\n            style={{\r\n              width: \"120px\",\r\n              height: \"120px\",\r\n            }}\r\n          />\r\n          Loading...\r\n        </div>\r\n\r\n        <form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n          onSubmit={async (event) => {\r\n            event.preventDefault();\r\n\r\n            this.setState({ is_loaded: false });\r\n\r\n            const match_cnt = 10;\r\n\r\n            let user_data = {};\r\n            let match_ids = [];\r\n            let game_datas = [];\r\n            let league_data = {};\r\n\r\n            if (this.state.search_name.trim() !== \"\") {\r\n              await fetch(\r\n                `https://who-is-victor-api-server.herokuapp.com/user?username=${this.state.search_name}`\r\n              )\r\n                .then((data) => {\r\n                  if (data.status !== 200) {\r\n                    reinit_state();\r\n                  } else {\r\n                    return data.json();\r\n                  }\r\n                })\r\n                .then((data) => (user_data = data));\r\n\r\n              await fetch(\r\n                `https://who-is-victor-api-server.herokuapp.com/match_ids?puuid=${user_data.puuid}&cnt=${match_cnt}`\r\n              )\r\n                .then((data) => {\r\n                  if (data.status !== 200) {\r\n                    this.setState({ is_loaded: true });\r\n                    reinit_state();\r\n                  } else {\r\n                    return data.json();\r\n                  }\r\n                })\r\n                .then((data) => (match_ids = data));\r\n\r\n              await Promise.all(\r\n                match_ids.map((match_id) =>\r\n                  fetch(\r\n                    `https://who-is-victor-api-server.herokuapp.com/game?match_id=${match_id}`\r\n                  )\r\n                )\r\n              ).then((datas) =>\r\n                datas.map((data) => {\r\n                  if (data.status !== 200) {\r\n                    reinit_state();\r\n                  } else {\r\n                    return data\r\n                      .json()\r\n                      .then((converted_data) =>\r\n                        game_datas.push(converted_data)\r\n                      );\r\n                  }\r\n                })\r\n              );\r\n\r\n              await fetch(\r\n                `https://who-is-victor-api-server.herokuapp.com/user/league_data?id=${user_data.id}`\r\n              )\r\n                .then((data) => {\r\n                  if (data.status !== 200) {\r\n                    reinit_state();\r\n                  } else {\r\n                    return data.json();\r\n                  }\r\n                })\r\n                .then((data) => {\r\n                  league_data = data[0];\r\n                });\r\n\r\n              let kda_sum = 0;\r\n              let cs_per_min_sum = 0;\r\n              let played_champions = {};\r\n              let win_sum = 0;\r\n              let most_champion_cnt = 0;\r\n              let most_champion = \"\";\r\n\r\n              game_datas.map((game_data) => {\r\n                game_data.info.participants.map((participant) => {\r\n                  if (participant.summonerId === user_data.id) {\r\n                    kda_sum +=\r\n                      (participant.kills + participant.assists) /\r\n                      participant.deaths;\r\n\r\n                    cs_per_min_sum +=\r\n                      participant.totalMinionsKilled /\r\n                      (participant.timePlayed / 60);\r\n\r\n                    win_sum += participant.win ? 1 : 0;\r\n\r\n                    played_champions[participant.championName] =\r\n                      played_champions[participant.championName] !== undefined\r\n                        ? played_champions[participant.championName] + 1\r\n                        : 1;\r\n                  }\r\n                });\r\n              });\r\n\r\n              if (league_data) {\r\n                this.setState({\r\n                  emblem: `icons/Emblem_${\r\n                    league_data.tier[0] +\r\n                    league_data.tier.toLowerCase().slice(1)\r\n                  }.png`,\r\n                  tier: `${league_data.tier} ${league_data.rank} ${league_data.leaguePoints} point`,\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  emblem: \"icons/Emblem_Challenger.png\",\r\n                  tier: \"unranked\",\r\n                });\r\n              }\r\n\r\n              Object.keys(played_champions).map((champion_name) => {\r\n                if (most_champion_cnt < played_champions[champion_name]) {\r\n                  most_champion_cnt = played_champions[champion_name];\r\n                  most_champion = champion_name;\r\n                }\r\n              });\r\n\r\n              this.setState({\r\n                profile_icon: user_data.profileIconId,\r\n                kda_average:\r\n                  Math.floor((kda_sum / game_datas.length) * 10) / 10,\r\n                summoner_level: user_data.summonerLevel,\r\n                cs_per_min_average:\r\n                  Math.floor((cs_per_min_sum / game_datas.length) * 10) / 10,\r\n                win_rate:\r\n                  Math.floor((win_sum / game_datas.length) * 100 * 10) / 10,\r\n                most_champion: most_champion,\r\n              });\r\n            }\r\n\r\n            this.setState({ is_loaded: true });\r\n\r\n            console.log(\"is loaded.\");\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              fontFamily: \"Game Of Squids\",\r\n              color: \"rgba(255, 255, 255, 0.85)\",\r\n            }}\r\n          >\r\n            Who is victor?\r\n          </h1>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n              width: \"550px\",\r\n              borderRadius: \"50px\",\r\n              backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n              padding: \"2px 20px\",\r\n              margin: \"50px 0px\",\r\n              height: \"30px\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{ height: \"100%\" }}\r\n              src=\"icons/logo.svg\"\r\n              alt=\"doesn't exists\"\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.search_name}\r\n              onChange={(event) => {\r\n                this.setState({ search_name: event.target.value });\r\n              }}\r\n              placeholder=\"소환사 레벨 검색\"\r\n              style={{\r\n                border: \"none\",\r\n                fontSize: \"20px\",\r\n                outline: \"none\",\r\n                maxWidth: \"300px\",\r\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n                textAlign: \"center\",\r\n                caretColor: \"rgba(0, 0, 0, 0)\",\r\n                color: \"rgba(255, 255, 255, 0.85)\",\r\n                fontFamily: \"KOTRA_BOLD-Bold\",\r\n              }}\r\n            />\r\n\r\n            <div\r\n              onMouseEnter={() => this.setState({ is_hovering: true })}\r\n              onMouseLeave={() => this.setState({ is_hovering: false })}\r\n              style={{\r\n                width: \"45px\",\r\n                cursor: \"pointer\",\r\n                height: \"30px\",\r\n                marginRight: \"-15px\",\r\n                color: \"rgba(0, 0,  0, 0.85)\",\r\n              }}\r\n            >\r\n              <input\r\n                type=\"image\"\r\n                src=\"icons/search_icon.svg\"\r\n                alt=\"doesn't exists\"\r\n                style={\r\n                  this.state.is_hovering\r\n                    ? {\r\n                        position: \"relative\",\r\n                        transform: \"translate(50%)\",\r\n                        transitionDuration: \"0.35s\",\r\n                        height: \"100%\",\r\n                      }\r\n                    : {\r\n                        position: \"relative\",\r\n                        transform: \"translate(0%)\",\r\n                        transitionDuration: \"0.35s\",\r\n                        height: \"100%\",\r\n                      }\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div></div>\r\n        </form>\r\n\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"1fr 4fr 1fr\",\r\n            marginBottom: \"24px\",\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n              borderRadius: \"24px\",\r\n              minHeight: \"900px\",\r\n              padding: \"24px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"1fr 3fr 1fr\",\r\n                columnGap: \"24px\",\r\n                justifyContent: \"space-between\",\r\n                height: \"160px \",\r\n                fontFamily: \"KOTRA_BOLD-Bold\",\r\n                marginBottom: \"24px\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`https://ddragon.leagueoflegends.com/cdn/12.20.1/img/profileicon/${this.state.profile_icon}.png`}\r\n                alt=\"doesn't exist\"\r\n                style={{ height: \"inherit\" }}\r\n              />\r\n\r\n              <span\r\n                style={{\r\n                  color: \"rgba(255, 255, 255, 0.85)\",\r\n                  height: \"inherit\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: \"inherit\",\r\n                    fontSize: \"15px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    레벨:\r\n                    {this.state.summoner_level !== \"\"\r\n                      ? this.state.summoner_level\r\n                      : \"???\"}\r\n                    레벨\r\n                  </div>\r\n\r\n                  <div>\r\n                    티어: {this.state.tier === \"\" ? \"???\" : this.state.tier}\r\n                  </div>\r\n\r\n                  <div>\r\n                    최근 10판 승률:\r\n                    {this.state.win_rate === undefined\r\n                      ? \"???\"\r\n                      : this.state.win_rate}\r\n                    %\r\n                  </div>\r\n\r\n                  <div>\r\n                    최근 10판 중 가장 많이 한 챔피언:\r\n                    {this.state.most_champion === \"\"\r\n                      ? \"???\"\r\n                      : this.state.most_champion}\r\n                  </div>\r\n\r\n                  <div>\r\n                    최근 10판 평균 kda:\r\n                    {this.state.kda_average === undefined\r\n                      ? \"???\"\r\n                      : this.state.kda_average}\r\n                  </div>\r\n\r\n                  <div>\r\n                    최근 10판 평균 분당 cs:\r\n                    {this.state.cs_per_min_average === undefined\r\n                      ? \"???\"\r\n                      : this.state.cs_per_min_average}\r\n                  </div>\r\n                </div>\r\n              </span>\r\n\r\n              <img\r\n                src={this.state.emblem}\r\n                alt=\"doesn't exist\"\r\n                style={{\r\n                  height: \"inherit\",\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <hr\r\n              style={{\r\n                borderColor: \"rgba(255, 255, 255, 0.75)\",\r\n              }}\r\n            />\r\n\r\n            <div>\r\n              {this.state.game_datas.map((game_data, idx) => (\r\n                <div key={idx}>{game_data}</div>\r\n              ))}\r\n              {/* <InfoCard\r\n                portrait_src={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${\r\n                  this.state.most_champion !== \"\"\r\n                    ? this.state.most_champion\r\n                    : \"Viktor\"\r\n                }_0.jpg`}\r\n                label={this.state.username}\r\n                height=\"220px\"\r\n                color=\"rgba(255, 255, 255, 0.7)\"\r\n                font=\"KOTRA_BOLD-Bold\"\r\n              /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\r\nimport { font_css } from \"../default.css\";\r\n\r\nclass InfoCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { card_clicked: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: this.props.color,\r\n          minWidth: \"0px\",\r\n          width: \"100%\",\r\n          textAlign: \"center\",\r\n        }}\r\n        onClick={(event) =>\r\n          this.setState({ card_clicked: !this.state.card_clicked })\r\n        }\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            visibility: this.state.card_clicked ? \"initial\" : \"hidden\",\r\n            fontFamily: this.props.font,\r\n          }}\r\n        >\r\n          {this.props.back_content}\r\n        </div>\r\n\r\n        <img\r\n          src={this.props.portrait_src}\r\n          alt=\"doesn't exist\"\r\n          style={{\r\n            visibility: this.state.card_clicked ? \"hidden\" : \"initial\",\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n\r\n        <div style={{ overflow: \"hidden\", fontFamily: this.props.font }}>\r\n          {this.props.label}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoCard;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport MainPage from \"./pages/main\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nroot.render(\n  <React.StrictMode>\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        position: \"fixed\",\n        width: \"100vw\",\n        height: \"100vh\",\n        top: \"0px\",\n        left: \"0px\",\n        zIndex: \"-1\",\n        background:\n          \"url('https://ddragon.leagueoflegends.com/cdn/img/champion/splash/Viktor_4.jpg') no-repeat center / cover \",\n        overflow: \"scroll\",\n      }}\n    >\n      <div\n        style={{\n          minHeight: \"100vh\",\n          width: \"1200px\",\n        }}\n      >\n        <MainPage />\n\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"2fr 1fr 2fr\",\n            color: \"rgba(255,255,255,0.6)\",\n          }}\n        >\n          <div>\n            This site isn’t endorsed by Riot Games and doesn’t reflect the views\n            or opinions of Riot Games or anyone officially involved in producing\n            or managing League of Legends. League of Legends and Riot Games are\n            trademarks or registered trademarks of Riot Games, Inc. League of\n            Legends © Riot Games, Inc.\n          </div>\n\n          <div></div>\n\n          <div>\n            <div>Email: JiminLeeDev0220@gmail.com</div>\n\n            <a\n              href=\"https://github.com/JiminLeeDev\"\n              style={{\n                textDecoration: \"none\",\n                color: \"rgba(255, 255, 255, 0.6)\",\n              }}\n            >\n              Github: JiminLeeDev\n            </a>\n\n            <div>P.H: 010-3264-3411</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}